package br.ufu.facom.lascam.coverageexploiter.parser.impl;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import org.eclipse.jdt.core.dom.AST;
import org.eclipse.jdt.core.dom.ASTNode;
import org.eclipse.jdt.core.dom.ASTParser;
import org.eclipse.jdt.core.dom.Name;

import br.ufu.facom.lascam.coverageexploiter.parser.Parser;
import br.ufu.facom.lascam.coverageexploiter.parser.model.ApiElement;
import br.ufu.facom.lascam.coverageexploiter.parser.model.ApiElements;

/**
 * Created by Klerisson on 11/11/2014.
 */
public class PartialProgramAnalyser extends Parser {

    public PartialProgramAnalyser() {
        super.apiElements = new ApiElements();
    }

    @Override
    public ApiElements parseSnippet(String statement) throws Exception {

        ASTParser parser = ASTParser.newParser(AST.JLS3);
        parser.setKind(ASTParser.K_STATEMENTS);
        parser.setSource(statement.toCharArray());
        PPANameVisitor ppaVisitor = new PPANameVisitor();
        ASTNode node = parser.createAST(null);
        node.accept(ppaVisitor);

        Map<String,Name> names = ppaVisitor.getMethods();
        ApiElement apiElement = new ApiElement();
        List<String> elements = new ArrayList<>();
        for(Map.Entry<String, Name> entry : names.entrySet()){
            elements.add(entry.getValue().getFullyQualifiedName());
            apiElement.setElements(elements);
        }
        super.apiElements.getApiElements().add(apiElement);
        return super.apiElements;
    }
}
