package br.ufu.facom.lascam.coverageexploiter.posts;

import java.io.FileInputStream;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.List;

import net.htmlparser.jericho.Element;
import net.htmlparser.jericho.Source;
import br.ufu.facom.lascam.coverageexploiter.posts.model.classifier.Answer;
import br.ufu.facom.lascam.coverageexploiter.posts.model.classifier.Pair;
import br.ufu.facom.lascam.coverageexploiter.util.AppProperties;
import br.ufu.facom.lascam.coverageexploiter.util.Constants;

import com.thoughtworks.xstream.XStream;

/**
 * Created by Klerisson on 03/09/2014.
 */
public class PostsRetriever {

    private List<Pair> howToPairs;

    public List<Pair> fetchPosts() throws Exception {

        try {

            String path = AppProperties.getProperty(Constants.POSTS_INPUT_PROP);
            InputStream in;
            if (path == null) {
                in = this.getClass().getResourceAsStream("/" + Constants.POSTS_INPUT_PATH);
            } else {
                in = new FileInputStream(path);
            }

            XStream xstream = new XStream();
            xstream.alias("list", ArrayList.class);
            xstream.alias("pair", Pair.class);
            howToPairs = (ArrayList<Pair>) xstream.fromXML(in);
            return howToPairs;

        } catch (Exception e) {
            throw e;
        }

    }

    public void parseBodies(){

        for(Pair p : this.howToPairs){

            Answer a = p.getAnswer();
            a.setCode(this.extractCodeStatments(a.getBody()));
        }
    }

    private String extractCodeStatments(String body) {

        Source source = new Source(body);
        source.fullSequentialParse();
        List<Element> lElements = source.getAllElements("code");

        StringBuilder sb = new StringBuilder();
        for(Element e : lElements){
            sb.append(e.getTextExtractor().toString()).append(System.lineSeparator());
        }

        return sb.toString();
    }
}
